name: Compile and Test

on:
  workflow_dispatch:
    inputs:
      os:
        description: 'OS'
        type: choice
        default: 'ubuntu-latest'
        options:
        - 'ubuntu-latest'
        - 'ubuntu-24.04'
        - 'ubuntu-22.04'
        - 'ubuntu-20.04'
      phpversion:
        description: 'PHP Version'
        type: choice
        default: '7.4'
        options:
        - '7.4'
        - '8.0'
        - '8.1'
        - '8.2'
        - '8.3'
      runtests:
        description: 'Run Tests'
        type: boolean
        default: true
        required: true
      runvalgrind:
        description: 'Run Tests with Memory Check'
        type: boolean
        default: false
        required: true

jobs:
  build:
    runs-on: "${{ github.event.inputs.os }}"
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install PHP and Perl Development
      env:
        PHP_VERSION: "${{ github.event.inputs.phpversion }}"
      run: |
        sudo apt-get install -qq "php$PHP_VERSION" "php$PHP_VERSION-dev" libperl-dev 
        sudo update-alternatives --set php "/usr/bin/php$PHP_VERSION"
        sudo update-alternatives --set phar "/usr/bin/phar$PHP_VERSION"
        sudo update-alternatives --set phar.phar "/usr/bin/phar.phar$PHP_VERSION"
        sudo update-alternatives --set phpize "/usr/bin/phpize$PHP_VERSION"
        sudo update-alternatives --set php-config "/usr/bin/php-config$PHP_VERSION"
        sudo update-alternatives --set phpdbg "/usr/bin/phpdbg$PHP_VERSION"
    - name: Establish PHP and Perl Versions
      run: |
        php -v
        phpize --version
        perl -v | head -n 2
    - name: Configure PHP Perl Extension
      env:
        PHP_PREFIX: "/usr"
        PERL_PREFIX: "/usr"
      run: |
        $PHP_PREFIX/bin/phpize
        ./configure --with-perl=$PERL_PREFIX --with-php-config=$PHP_PREFIX/bin/php-config
        # Non-interactive run-tests
        perl -pi -e 's/(\/run-tests\.php )/$1-q /' Makefile
    - name: Build
      run: make
    - name: Test Extension for Functionality
      if: ${{ github.event.inputs.runtests == 'true' }}
      run: |
        make test
    - name: Install valgrind
      if: ${{ github.event.inputs.runvalgrind == 'true' }}
      run: |
        sudo apt-get install -qq valgrind
        valgrind --version
    - name: Setup Memory Check Suppression File
      if: ${{ github.event.inputs.runvalgrind == 'true' }}
      env:
        PHP_BIN: "/usr/bin/php${{ github.event.inputs.phpversion }}"
      run: |
        # Patch PHP executable name
        cat php_perl.supp | perl -p -e "s#obj:/usr/bin/php#obj:$PHP_BIN#" | tee php_perl_fixexe.supp
        # Set in valgrindrc
        echo "--suppressions=$PWD/php_perl_fixexe.supp" > ~/.valgrindrc
    - name: Test Extension for Memory Leaks
      if: ${{ github.event.inputs.runvalgrind == 'true' }}
      run: |
        # Memory checking run-tests.php
        perl -pi -e 's/(\/run-tests\.php )/$1-m /' Makefile
        # Run the tests
        make test
